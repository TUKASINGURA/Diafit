{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { chartTypes } from 'gifted-charts-core';\nimport { Line, Svg } from 'react-native-svg';\nvar RenderVerticalLines = function (props) {\n  var verticalLinesAr = props.verticalLinesAr,\n    verticalLinesSpacing = props.verticalLinesSpacing,\n    spacing = props.spacing,\n    initialSpacing = props.initialSpacing,\n    verticalLinesZIndex = props.verticalLinesZIndex,\n    verticalLinesHeight = props.verticalLinesHeight,\n    verticalLinesThickness = props.verticalLinesThickness,\n    verticalLinesColor = props.verticalLinesColor,\n    verticalLinesStrokeDashArray = props.verticalLinesStrokeDashArray,\n    verticalLinesShift = props.verticalLinesShift,\n    verticalLinesUptoDataPoint = props.verticalLinesUptoDataPoint,\n    verticalLinesStrokeLinecap = props.verticalLinesStrokeLinecap,\n    xAxisThickness = props.xAxisThickness,\n    labelsExtraHeight = props.labelsExtraHeight,\n    containerHeight = props.containerHeight,\n    data = props.data,\n    stackData = props.stackData,\n    barWidth = props.barWidth,\n    maxValue = props.maxValue,\n    chartType = props.chartType,\n    containerHeightIncludingBelowXAxis = props.containerHeightIncludingBelowXAxis,\n    totalWidth = props.totalWidth,\n    xAxisLabelsVerticalShift = props.xAxisLabelsVerticalShift;\n  var getHeightOfVerticalLine = function (index) {\n    if (verticalLinesUptoDataPoint) {\n      if (index < data.length) {\n        return data[index].value * containerHeight / maxValue - xAxisThickness;\n      } else {\n        return verticalLinesHeight !== null && verticalLinesHeight !== void 0 ? verticalLinesHeight : 0;\n      }\n    } else {\n      return verticalLinesHeight || containerHeightIncludingBelowXAxis - xAxisThickness;\n    }\n  };\n  var extendedContainerHeight = containerHeight + 10 + labelsExtraHeight;\n  var thickness = verticalLinesThickness || 2;\n  var heightAdjustmentDueToStrokeLinecap = verticalLinesStrokeLinecap === 'round' || verticalLinesStrokeLinecap === 'square' ? thickness / 2 : 0;\n  return _jsx(View, {\n    style: {\n      position: 'absolute',\n      height: extendedContainerHeight,\n      bottom: 60 + xAxisLabelsVerticalShift,\n      left: 0,\n      width: totalWidth,\n      zIndex: verticalLinesZIndex || -1\n    },\n    children: _jsx(Svg, {\n      height: containerHeightIncludingBelowXAxis,\n      width: totalWidth,\n      children: verticalLinesAr.map(function (item, index) {\n        var totalSpacing = initialSpacing;\n        if (verticalLinesSpacing) {\n          totalSpacing = verticalLinesSpacing * (index + 1);\n        } else {\n          if (stackData) {\n            totalSpacing += (stackData[0].barWidth || barWidth || 30) / 2;\n          } else {\n            totalSpacing += (data[0].barWidth || barWidth || 30) / 2;\n          }\n          for (var i = 0; i < index; i++) {\n            var actualSpacing = spacing;\n            if (stackData) {\n              if (i >= stackData.length - 1) {\n                actualSpacing += (barWidth || 30) / 2;\n              } else {\n                if (stackData[i].spacing || stackData[i].spacing === 0) {\n                  actualSpacing = stackData[i].spacing;\n                }\n                if (stackData[i + 1].barWidth) {\n                  actualSpacing += stackData[i + 1].barWidth;\n                } else {\n                  actualSpacing += barWidth || 30;\n                }\n              }\n            } else {\n              if (i >= data.length - 1) {\n                actualSpacing += (barWidth || 30) / 2;\n              } else {\n                if (data[i].spacing || data[i].spacing === 0) {\n                  actualSpacing = data[i].spacing;\n                }\n                if (data[i + 1].barWidth) {\n                  actualSpacing += data[i + 1].barWidth;\n                } else {\n                  actualSpacing += barWidth || 30;\n                }\n              }\n            }\n            totalSpacing += actualSpacing;\n          }\n        }\n        var x = verticalLinesShift + 1 + (chartType === chartTypes.BAR ? totalSpacing - 1 : verticalLinesSpacing ? verticalLinesSpacing * (index + 1) : index * spacing + (initialSpacing - 2));\n        return _jsx(Line, {\n          x1: x,\n          y1: extendedContainerHeight - getHeightOfVerticalLine(index) + heightAdjustmentDueToStrokeLinecap,\n          x2: x,\n          y2: extendedContainerHeight - heightAdjustmentDueToStrokeLinecap,\n          stroke: verticalLinesColor || 'lightgray',\n          strokeWidth: verticalLinesThickness || 2,\n          strokeDasharray: verticalLinesStrokeDashArray !== null && verticalLinesStrokeDashArray !== void 0 ? verticalLinesStrokeDashArray : '',\n          strokeLinecap: verticalLinesStrokeLinecap\n        }, index);\n      })\n    })\n  });\n};\nexport default RenderVerticalLines;","map":{"version":3,"names":["jsx","_jsx","View","chartTypes","Line","Svg","RenderVerticalLines","props","verticalLinesAr","verticalLinesSpacing","spacing","initialSpacing","verticalLinesZIndex","verticalLinesHeight","verticalLinesThickness","verticalLinesColor","verticalLinesStrokeDashArray","verticalLinesShift","verticalLinesUptoDataPoint","verticalLinesStrokeLinecap","xAxisThickness","labelsExtraHeight","containerHeight","data","stackData","barWidth","maxValue","chartType","containerHeightIncludingBelowXAxis","totalWidth","xAxisLabelsVerticalShift","getHeightOfVerticalLine","index","length","value","extendedContainerHeight","thickness","heightAdjustmentDueToStrokeLinecap","style","position","height","bottom","left","width","zIndex","children","map","item","totalSpacing","i","actualSpacing","x","BAR","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","strokeLinecap"],"sources":["C:/All Project/Flutter_projects/food Recomendation/DiaFit-master/node_modules/react-native-gifted-charts/dist/Components/BarAndLineChartsWrapper/renderVerticalLines.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { View } from 'react-native';\nimport { chartTypes } from 'gifted-charts-core';\nimport { Line, Svg } from 'react-native-svg';\nvar RenderVerticalLines = function (props) {\n    var verticalLinesAr = props.verticalLinesAr, verticalLinesSpacing = props.verticalLinesSpacing, spacing = props.spacing, initialSpacing = props.initialSpacing, verticalLinesZIndex = props.verticalLinesZIndex, verticalLinesHeight = props.verticalLinesHeight, verticalLinesThickness = props.verticalLinesThickness, verticalLinesColor = props.verticalLinesColor, verticalLinesStrokeDashArray = props.verticalLinesStrokeDashArray, verticalLinesShift = props.verticalLinesShift, verticalLinesUptoDataPoint = props.verticalLinesUptoDataPoint, verticalLinesStrokeLinecap = props.verticalLinesStrokeLinecap, xAxisThickness = props.xAxisThickness, labelsExtraHeight = props.labelsExtraHeight, containerHeight = props.containerHeight, data = props.data, stackData = props.stackData, barWidth = props.barWidth, maxValue = props.maxValue, chartType = props.chartType, containerHeightIncludingBelowXAxis = props.containerHeightIncludingBelowXAxis, totalWidth = props.totalWidth, xAxisLabelsVerticalShift = props.xAxisLabelsVerticalShift;\n    var getHeightOfVerticalLine = function (index) {\n        if (verticalLinesUptoDataPoint) {\n            if (index < data.length) {\n                return ((data[index].value * containerHeight) / maxValue - xAxisThickness);\n            }\n            else {\n                return verticalLinesHeight !== null && verticalLinesHeight !== void 0 ? verticalLinesHeight : 0;\n            }\n        }\n        else {\n            return (verticalLinesHeight ||\n                containerHeightIncludingBelowXAxis - xAxisThickness);\n        }\n    };\n    var extendedContainerHeight = containerHeight + 10 + labelsExtraHeight;\n    var thickness = verticalLinesThickness || 2;\n    var heightAdjustmentDueToStrokeLinecap = verticalLinesStrokeLinecap === 'round' ||\n        verticalLinesStrokeLinecap === 'square'\n        ? thickness / 2\n        : 0;\n    return (_jsx(View, { style: {\n            position: 'absolute',\n            height: extendedContainerHeight,\n            bottom: 60 + xAxisLabelsVerticalShift, //stepHeight * -0.5 + xAxisThickness,\n            left: 0,\n            width: totalWidth,\n            zIndex: verticalLinesZIndex || -1,\n        }, children: _jsx(Svg, { height: containerHeightIncludingBelowXAxis, width: totalWidth, children: verticalLinesAr.map(function (item, index) {\n                var totalSpacing = initialSpacing;\n                if (verticalLinesSpacing) {\n                    totalSpacing = verticalLinesSpacing * (index + 1);\n                }\n                else {\n                    if (stackData) {\n                        totalSpacing += (stackData[0].barWidth || barWidth || 30) / 2;\n                    }\n                    else {\n                        totalSpacing += (data[0].barWidth || barWidth || 30) / 2;\n                    }\n                    for (var i = 0; i < index; i++) {\n                        var actualSpacing = spacing;\n                        if (stackData) {\n                            if (i >= stackData.length - 1) {\n                                actualSpacing += (barWidth || 30) / 2;\n                            }\n                            else {\n                                if (stackData[i].spacing || stackData[i].spacing === 0) {\n                                    actualSpacing = stackData[i].spacing;\n                                }\n                                if (stackData[i + 1].barWidth) {\n                                    actualSpacing += stackData[i + 1].barWidth;\n                                }\n                                else {\n                                    actualSpacing += barWidth || 30;\n                                }\n                            }\n                        }\n                        else {\n                            if (i >= data.length - 1) {\n                                actualSpacing += (barWidth || 30) / 2;\n                            }\n                            else {\n                                if (data[i].spacing || data[i].spacing === 0) {\n                                    actualSpacing = data[i].spacing;\n                                }\n                                if (data[i + 1].barWidth) {\n                                    actualSpacing += data[i + 1].barWidth;\n                                }\n                                else {\n                                    actualSpacing += barWidth || 30;\n                                }\n                            }\n                        }\n                        totalSpacing += actualSpacing;\n                    }\n                }\n                var x = verticalLinesShift +\n                    1 +\n                    (chartType === chartTypes.BAR\n                        ? totalSpacing - 1\n                        : verticalLinesSpacing\n                            ? verticalLinesSpacing * (index + 1)\n                            : index * spacing + (initialSpacing - 2));\n                return (_jsx(Line, { x1: x, y1: extendedContainerHeight -\n                        getHeightOfVerticalLine(index) +\n                        heightAdjustmentDueToStrokeLinecap, x2: x, y2: extendedContainerHeight - heightAdjustmentDueToStrokeLinecap, stroke: verticalLinesColor || 'lightgray', strokeWidth: verticalLinesThickness || 2, strokeDasharray: verticalLinesStrokeDashArray !== null && verticalLinesStrokeDashArray !== void 0 ? verticalLinesStrokeDashArray : '', strokeLinecap: verticalLinesStrokeLinecap }, index));\n            }) }) }));\n};\nexport default RenderVerticalLines;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}