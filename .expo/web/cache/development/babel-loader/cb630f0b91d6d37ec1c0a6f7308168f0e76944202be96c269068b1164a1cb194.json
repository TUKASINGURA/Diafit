{"ast":null,"code":"var _jsxFileName = \"C:\\\\All Project\\\\Flutter_projects\\\\food Recomendation\\\\DiaFit-master\\\\Screens\\\\UserHealthRecords.jsx\";\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button, TextInput, ActivityIndicator } from 'react-native-paper';\nimport { setDoc, doc } from 'firebase/firestore';\nimport { firestoredb } from '../firebaseConfig';\nimport { StatusBar } from 'expo-status-bar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserHealthRecords({\n  navigation\n}) {\n  const [selectedValue, setSelectedValue] = useState(null);\n  const [age, setAge] = useState('');\n  const [weight, setWeight] = useState('');\n  const [hemoglobin, setHemoglobin] = useState('');\n  const [bloodPressure, setBloodPressure] = useState('');\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const placeholder = {\n    label: 'Select Diabetic type...',\n    value: null\n  };\n  const handleSave = async () => {\n    setLoading(true);\n    try {\n      if (user) {\n        const data = {\n          age: parseInt(age),\n          weight: parseInt(weight),\n          glycatedHemoglobin: parseInt(hemoglobin),\n          bloodPressure\n        };\n        const docRef = doc(firestoredb, 'userHealthRecords', user.uid);\n        await setDoc(docRef, data);\n        console.log('Document written with ID: ', docRef.id);\n        setLoading(false);\n        Alert.alert('Success', 'Health records saved successfully.');\n        navigation.navigate(\"main\");\n      } else {\n        setLoading(false);\n        Alert.alert('Error', 'User not authenticated.');\n      }\n    } catch (error) {\n      setLoading(false);\n      console.error('Error adding document: ', error);\n      Alert.alert('Error', 'Failed to save health records. Please try again.');\n    }\n  };\n  return _jsxDEV(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsxDEV(StatusBar, {\n      style: \"dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), _jsxDEV(TextInput, {\n      label: \"Age (Years)\",\n      keyboardType: \"numeric\",\n      mode: \"outlined\",\n      value: age,\n      onChangeText: setAge,\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), _jsxDEV(TextInput, {\n      label: \"Weight\",\n      keyboardType: \"numeric\",\n      mode: \"outlined\",\n      value: weight,\n      onChangeText: setWeight,\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), _jsxDEV(TextInput, {\n      label: \"Glycated Hemoglobin\",\n      keyboardType: \"numeric\",\n      mode: \"outlined\",\n      value: hemoglobin,\n      onChangeText: setHemoglobin,\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), _jsxDEV(TextInput, {\n      label: \"Blood Pressure\",\n      keyboardType: \"default\",\n      mode: \"outlined\",\n      value: bloodPressure,\n      onChangeText: setBloodPressure,\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), loading ? _jsxDEV(ActivityIndicator, {\n      color: \"#177AD5\",\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this) : _jsxDEV(Button, {\n      mode: \"contained\",\n      buttonColor: \"#177AD5\",\n      onPress: handleSave,\n      style: styles.button,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20\n  },\n  input: {\n    marginVertical: 5\n  }\n});","map":{"version":3,"names":["React","useState","ScrollView","StyleSheet","Alert","Button","TextInput","ActivityIndicator","setDoc","doc","firestoredb","StatusBar","jsxDEV","_jsxDEV","UserHealthRecords","navigation","selectedValue","setSelectedValue","age","setAge","weight","setWeight","hemoglobin","setHemoglobin","bloodPressure","setBloodPressure","user","setUser","loading","setLoading","placeholder","label","value","handleSave","data","parseInt","glycatedHemoglobin","docRef","uid","console","log","id","alert","navigate","error","contentContainerStyle","styles","container","children","style","fileName","_jsxFileName","lineNumber","columnNumber","keyboardType","mode","onChangeText","input","color","size","buttonColor","onPress","button","create","padding","marginVertical"],"sources":["C:/All Project/Flutter_projects/food Recomendation/DiaFit-master/Screens/UserHealthRecords.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { ScrollView, StyleSheet, Alert } from 'react-native';\nimport { Button, TextInput, ActivityIndicator } from 'react-native-paper';\nimport { setDoc, doc } from 'firebase/firestore';\nimport { firestoredb } from '../firebaseConfig'; // Import Firebase Auth module and Firestore\nimport { StatusBar } from 'expo-status-bar';\n\nexport default function UserHealthRecords({ navigation }) {\n    const [selectedValue, setSelectedValue] = useState(null);\n    const [age, setAge] = useState('');\n    const [weight, setWeight] = useState('');\n    const [hemoglobin, setHemoglobin] = useState('');\n    const [bloodPressure, setBloodPressure] = useState('');\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const placeholder = {\n        label: 'Select Diabetic type...',\n        value: null,\n    };\n\n    const handleSave = async () => {\n        setLoading(true)\n        try {\n            if (user) {\n                const data = {\n                    age: parseInt(age),\n                    weight: parseInt(weight),\n                    glycatedHemoglobin: parseInt(hemoglobin),\n                    bloodPressure,\n                };\n\n                const docRef = doc(firestoredb, 'userHealthRecords', user.uid);\n                await setDoc(docRef, data);\n\n                console.log('Document written with ID: ', docRef.id);\n                setLoading(false);\n                Alert.alert('Success', 'Health records saved successfully.');\n                navigation.navigate(\"main\");\n            } else {\n                setLoading(false);\n                Alert.alert('Error', 'User not authenticated.');\n            }\n        } catch (error) {\n            setLoading(false);\n            console.error('Error adding document: ', error);\n            Alert.alert('Error', 'Failed to save health records. Please try again.');\n        }\n    };\n\n\n    return (\n        <ScrollView contentContainerStyle={styles.container}>\n            <StatusBar style='dark' />\n            <TextInput\n                label=\"Age (Years)\"\n                keyboardType=\"numeric\"\n                mode=\"outlined\"\n                value={age}\n                onChangeText={setAge}\n                style={styles.input}\n            />\n\n            <TextInput\n                label=\"Weight\"\n                keyboardType=\"numeric\"\n                mode=\"outlined\"\n                value={weight}\n                onChangeText={setWeight}\n                style={styles.input}\n            />\n\n            <TextInput\n                label=\"Glycated Hemoglobin\"\n                keyboardType=\"numeric\"\n                mode=\"outlined\"\n                value={hemoglobin}\n                onChangeText={setHemoglobin}\n                style={styles.input}\n            />\n\n            <TextInput\n                label=\"Blood Pressure\"\n                keyboardType=\"default\"\n                mode=\"outlined\"\n                value={bloodPressure}\n                onChangeText={setBloodPressure}\n                style={styles.input}\n            />\n            {loading ?\n                <ActivityIndicator color='#177AD5' size=\"small\" />\n                :\n                <Button mode=\"contained\" buttonColor='#177AD5' onPress={handleSave} style={styles.button}>\n                    Save\n                </Button>\n            }\n\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 20,\n    },\n    input: {\n        marginVertical: 5,\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}