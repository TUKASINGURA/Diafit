{"ast":null,"code":"var _jsxFileName = \"C:\\\\All Project\\\\Flutter_projects\\\\food Recomendation\\\\DiaFit-master\\\\Screens\\\\SignScreen.jsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TextInput, Button, Text, ActivityIndicator } from 'react-native-paper';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile } from 'firebase/auth';\nimport { collection, doc, setDoc } from 'firebase/firestore';\nimport RNPickerSelect from 'react-native-picker-select';\nimport { firebaseAuth, firestoredb } from '../firebaseConfig';\nimport { StatusBar } from 'expo-status-bar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignUpScreen = ({\n  navigation\n}) => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [selectedValue, setSelectedValue] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const placeholder = {\n    label: 'Select user type...',\n    value: null\n  };\n  const options = [{\n    label: 'Patient',\n    value: 'Patient'\n  }, {\n    label: 'Doctor',\n    value: 'Doctor'\n  }];\n  const handleSignUp = () => {\n    setLoading(true);\n    createUserWithEmailAndPassword(firebaseAuth, email, password).then(userCredential => {\n      const user = userCredential.user;\n      updateProfile(user, {\n        displayName: username\n      }).then(() => {\n        console.log('User profile updated with display name:', username);\n        signInWithEmailAndPassword(firebaseAuth, email, password).then(() => {\n          console.log(\"Logged in. \");\n          navigation.replace(\"records\");\n          setLoading(false);\n        });\n      }).catch(error => {\n        console.error('Error updating user profile:', error.message);\n        Alert.alert('Sign up Error', error.message);\n        setLoading(false);\n      });\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.error('Sign-up error:', errorMessage);\n      Alert.alert('Login Error', error.message);\n      setLoading(false);\n    });\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(StatusBar, {\n      style: \"dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), _jsxDEV(Image, {\n      source: require(\"../assets/diafit.png\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.title,\n      children: \"DiaFit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      label: \"Username\",\n      value: username,\n      onChangeText: text => setUsername(text),\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      label: \"Email\",\n      value: email,\n      onChangeText: text => setEmail(text),\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      label: \"Password\",\n      value: password,\n      onChangeText: text => setPassword(text),\n      secureTextEntry: true,\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), loading ? _jsxDEV(ActivityIndicator, {\n      size: \"small\",\n      color: \"#177AD5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 18\n    }, this) : _jsxDEV(_Fragment, {\n      children: [_jsxDEV(Button, {\n        mode: \"contained\",\n        buttonColor: \"#177AD5\",\n        onPress: handleSignUp,\n        style: styles.button,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), _jsxDEV(TouchableOpacity, {\n        onPress: () => navigation.replace(\"login\"),\n        children: _jsxDEV(Text, {\n          style: styles.noAcc,\n          children: \"Already Having an Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  input: {\n    width: '100%',\n    marginBottom: 20\n  },\n  button: {\n    width: '100%'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  noAcc: {\n    fontSize: 16,\n    fontWeight: '300',\n    marginTop: 20\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","View","StyleSheet","Image","TouchableOpacity","Alert","TextInput","Button","Text","ActivityIndicator","createUserWithEmailAndPassword","signInWithEmailAndPassword","updateProfile","collection","doc","setDoc","RNPickerSelect","firebaseAuth","firestoredb","StatusBar","jsxDEV","_jsxDEV","Fragment","_Fragment","SignUpScreen","navigation","username","setUsername","email","setEmail","password","setPassword","selectedValue","setSelectedValue","loading","setLoading","placeholder","label","value","options","handleSignUp","then","userCredential","user","displayName","console","log","replace","catch","error","message","alert","errorCode","code","errorMessage","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","source","require","title","onChangeText","text","input","secureTextEntry","size","color","mode","buttonColor","onPress","button","noAcc","create","flex","justifyContent","alignItems","padding","width","marginBottom","fontSize","fontWeight","marginTop"],"sources":["C:/All Project/Flutter_projects/food Recomendation/DiaFit-master/Screens/SignScreen.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, Image, TouchableOpacity, Alert } from 'react-native';\nimport { TextInput, Button, Text, ActivityIndicator } from 'react-native-paper';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile } from 'firebase/auth';\nimport { collection, doc, setDoc } from 'firebase/firestore'; // Import Firestore modules\nimport RNPickerSelect from 'react-native-picker-select';\nimport { firebaseAuth, firestoredb } from '../firebaseConfig';\nimport { StatusBar } from 'expo-status-bar';\n\nconst SignUpScreen = ({ navigation }) => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [selectedValue, setSelectedValue] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const placeholder = {\n    label: 'Select user type...',\n    value: null,\n  };\n\n  const options = [\n    { label: 'Patient', value: 'Patient' },\n    { label: 'Doctor', value: 'Doctor' },\n  ];\n\n  const handleSignUp = () => {\n    setLoading(true);\n    createUserWithEmailAndPassword(firebaseAuth, email, password)\n      .then((userCredential) => {\n        const user = userCredential.user;\n\n        // Update user profile with display name\n        updateProfile(user, {\n          displayName: username,\n        }).then(() => {\n          console.log('User profile updated with display name:', username);\n          signInWithEmailAndPassword(firebaseAuth, email, password)\n            .then(() => {\n              console.log(\"Logged in. \")\n              navigation.replace(\"records\");\n              setLoading(false);\n            })\n        }).catch((error) => {\n          console.error('Error updating user profile:', error.message);\n          Alert.alert('Sign up Error', error.message);\n          setLoading(false);\n\n        });\n\n        // // Store user type in Firestore\n        // const userDocRef = doc(firestore, 'userTypes', user.uid); // Assuming 'userTypes' is the collection name\n        // setDoc(userDocRef, {\n        //   userType: selectedValue,\n        // }).then(() => {\n        //   console.log('User type stored in Firestore:', selectedValue);\n        //   setLoading(false);\n\n        // }).catch((error) => {\n        //   console.error('Error storing user type in Firestore:', error.message);\n        //   setLoading(false);\n\n        // });\n      })\n      .catch((error) => {\n        // Handle sign-up errors\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.error('Sign-up error:', errorMessage);\n        Alert.alert('Login Error', error.message);\n        setLoading(false);\n\n        // Handle specific errors or display error message to the user\n      });\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style='dark' />\n      <Image source={require(\"../assets/diafit.png\")} />\n      <Text style={styles.title}>DiaFit</Text>\n      <TextInput\n        label=\"Username\"\n        value={username}\n        onChangeText={text => setUsername(text)}\n        style={styles.input}\n      />\n      {/* <View style={{ width: \"100%\" }}>\n        <RNPickerSelect\n          placeholder={placeholder}\n          items={options}\n          onValueChange={(value) => setSelectedValue(value)}\n          value={selectedValue}\n        />\n        {selectedValue && <Text>Selected: {selectedValue}</Text>}\n      </View> */}\n      <TextInput\n        label=\"Email\"\n        value={email}\n        onChangeText={text => setEmail(text)}\n        style={styles.input}\n      />\n      <TextInput\n        label=\"Password\"\n        value={password}\n        onChangeText={text => setPassword(text)}\n        secureTextEntry\n        style={styles.input}\n      />\n      {loading ? <ActivityIndicator size=\"small\" color='#177AD5' /> :\n        <>\n          <Button mode=\"contained\" buttonColor='#177AD5' onPress={handleSignUp} style={styles.button}>\n            Sign Up\n          </Button>\n          <TouchableOpacity onPress={() => navigation.replace(\"login\")}>\n            <Text style={styles.noAcc}>Already Having an Account</Text>\n          </TouchableOpacity>\n        </>\n      }\n\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  input: {\n    width: '100%',\n    marginBottom: 20,\n  },\n  button: {\n    width: '100%',\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  noAcc: {\n    fontSize: 16,\n    fontWeight: '300',\n    marginTop: 20,\n  },\n});\n\nexport default SignUpScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}