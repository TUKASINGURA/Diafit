{"ast":null,"code":"var _jsxFileName = \"C:\\\\All Project\\\\Flutter_projects\\\\food Recomendation\\\\DiaFit-master\\\\Screens\\\\AddFoodRecords.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, TextInput } from 'react-native-paper';\nimport axios from 'axios';\nimport { addDoc, collection } from 'firebase/firestore';\nimport { firestoredb, auth } from '../firebaseConfig';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddFoodRecord() {\n  const [foodName, setFoodName] = useState(\"\");\n  const [imageUri, setImageUri] = useState(\"\");\n  const [formData, setFormData] = useState({\n    Glycemic_Index: null,\n    Calories: '',\n    Carbohydrates: '',\n    Protein: '',\n    Fat: '',\n    Sodium_Content: '',\n    Potassium_Content: '',\n    Magnesium_Content: '',\n    Calcium_Content: '',\n    Fiber_Content: ''\n  });\n  const [currentUserEmail, setCurrentUserEmail] = useState(null);\n  const authEmails = [\"tatwanzire@gmail.com\", \"allanklienz22@gmail.com\", \"omarajacob12@gmail.com\"];\n  useEffect(() => {\n    const auth = getAuth();\n    const user = auth.currentUser;\n    if (user) {\n      setCurrentUserEmail(user.email);\n    }\n  }, []);\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post('https://5183-41-75-190-7.ngrok-free.app/predict/', formData);\n      if (response.data.prediction == 1) {\n        Alert.alert('Classification', `The ${foodName} is good for a diabetic patient.`);\n        let foodRecord = {\n          foodName: foodName,\n          imageUri: imageUri,\n          Glycemic_Index: parseInt(formData.Glycemic_Index),\n          Calories: formData.Calories,\n          Carbohydrates: formData.Carbohydrates,\n          Protein: formData.Protein,\n          Fat: formData.Fat,\n          Sodium_Content: formData.Sodium_Content,\n          Potassium_Content: formData.Potassium_Content,\n          Magnesium_Content: formData.Magnesium_Content,\n          Calcium_Content: formData.Calcium_Content,\n          Fiber_Content: formData.Fiber_Content\n        };\n        await addDoc(collection(firestoredb, 'recommendedFood'), foodRecord);\n      } else {\n        Alert.alert('Classification', `${foodName} is not recommended for a diabetic patient.`);\n      }\n    } catch (error) {\n      Alert.alert('Error', `Failed to make prediction. Please try again. ${error}`);\n    }\n  };\n  const handleInputChange = (name, value) => {\n    setFormData(Object.assign({}, formData, {\n      [name]: value\n    }));\n  };\n  if (!currentUserEmail || !authEmails.includes(currentUserEmail)) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Unauthorized Access\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        children: \"You are not authorized to access this feature.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n  return _jsxDEV(ScrollView, {\n    style: styles.container,\n    children: _jsxDEV(View, {\n      style: {\n        marginBottom: 30\n      },\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Record Food Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        label: \"Food Name\",\n        style: styles.input,\n        value: foodName,\n        onChangeText: text => setFoodName(text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        label: \"Image Uri\",\n        style: styles.input,\n        value: imageUri,\n        onChangeText: text => setImageUri(text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        label: \"Glycemic Index\",\n        keyboardType: \"numeric\",\n        style: styles.input,\n        value: formData.Glycemic_Index,\n        onChangeText: text => handleInputChange('Glycemic_Index', text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        label: \"Calories\",\n        style: styles.input,\n        value: formData.Calories,\n        onChangeText: text => handleInputChange('Calories', text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        label: \"Carbohydrates\",\n        style: styles.input,\n        value: formData.Carbohydrates,\n        onChangeText: text => handleInputChange('Carbohydrates', text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        label: \"Protein\",\n        style: styles.input,\n        value: formData.Protein,\n        onChangeText: text => handleInputChange('Protein', text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        label: \"Fat\",\n        style: styles.input,\n        value: formData.Fat,\n        onChangeText: text => handleInputChange('Fat', text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        label: \"Sodium Content\",\n        style: styles.input,\n        value: formData.Sodium_Content,\n        onChangeText: text => handleInputChange('Sodium_Content', text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        label: \"Potassium Content\",\n        style: styles.input,\n        value: formData.Potassium_Content,\n        onChangeText: text => handleInputChange('Potassium_Content', text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        label: \"Magnesium Content\",\n        style: styles.input,\n        value: formData.Magnesium_Content,\n        onChangeText: text => handleInputChange('Magnesium_Content', text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        label: \"Calcium Content\",\n        style: styles.input,\n        value: formData.Calcium_Content,\n        onChangeText: text => handleInputChange('Calcium_Content', text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), _jsxDEV(TextInput, {\n        label: \"Fiber Content\",\n        style: styles.input,\n        value: formData.Fiber_Content,\n        onChangeText: text => handleInputChange('Fiber_Content', text)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), _jsxDEV(Button, {\n        title: \"Predict\",\n        onPress: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20\n  },\n  input: {\n    marginBottom: 10\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 5\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","Button","Alert","ScrollView","Text","TextInput","axios","addDoc","collection","firestoredb","auth","getAuth","onAuthStateChanged","jsxDEV","_jsxDEV","AddFoodRecord","foodName","setFoodName","imageUri","setImageUri","formData","setFormData","Glycemic_Index","Calories","Carbohydrates","Protein","Fat","Sodium_Content","Potassium_Content","Magnesium_Content","Calcium_Content","Fiber_Content","currentUserEmail","setCurrentUserEmail","authEmails","user","currentUser","email","handleSubmit","response","post","data","prediction","alert","foodRecord","parseInt","error","handleInputChange","name","value","Object","assign","includes","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","label","input","onChangeText","text","keyboardType","onPress","create","padding","fontSize","fontWeight"],"sources":["C:/All Project/Flutter_projects/food Recomendation/DiaFit-master/Screens/AddFoodRecords.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, Button, Alert, ScrollView } from 'react-native';\nimport { Text, TextInput } from 'react-native-paper';\nimport axios from 'axios';\nimport { addDoc, collection } from 'firebase/firestore';\nimport { firestoredb, auth } from '../firebaseConfig';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\n\nexport default function AddFoodRecord() {\n    const [foodName, setFoodName] = useState(\"\");\n    const [imageUri, setImageUri] = useState(\"\");\n    const [formData, setFormData] = useState({\n        Glycemic_Index: null,\n        Calories: '',\n        Carbohydrates: '',\n        Protein: '',\n        Fat: '',\n        Sodium_Content: '',\n        Potassium_Content: '',\n        Magnesium_Content: '',\n        Calcium_Content: '',\n        Fiber_Content: '',\n    });\n    const [currentUserEmail, setCurrentUserEmail] = useState(null);\n\n    const authEmails = [\"tatwanzire@gmail.com\", \"allanklienz22@gmail.com\", \"omarajacob12@gmail.com\"];\n\n    useEffect(() => {\n        const auth = getAuth();\n        const user = auth.currentUser;\n        if (user) {\n            setCurrentUserEmail(user.email);\n        }\n    }, []);\n\n    const handleSubmit = async () => {\n        try {\n            const response = await axios.post('https://5183-41-75-190-7.ngrok-free.app/predict/', formData);\n            if (response.data.prediction == 1) {\n                Alert.alert('Classification', `The ${foodName} is good for a diabetic patient.`);\n                // Add the food record to Firestore\n                let foodRecord = {\n                    foodName: foodName,\n                    imageUri: imageUri,\n                    Glycemic_Index: parseInt(formData.Glycemic_Index),\n                    Calories: formData.Calories,\n                    Carbohydrates: formData.Carbohydrates,\n                    Protein: formData.Protein,\n                    Fat: formData.Fat,\n                    Sodium_Content: formData.Sodium_Content,\n                    Potassium_Content: formData.Potassium_Content,\n                    Magnesium_Content: formData.Magnesium_Content,\n                    Calcium_Content: formData.Calcium_Content,\n                    Fiber_Content: formData.Fiber_Content,\n                };\n                await addDoc(collection(firestoredb, 'recommendedFood'), foodRecord);\n            } else {\n                Alert.alert('Classification', `${foodName} is not recommended for a diabetic patient.`);\n            }\n        } catch (error) {\n            Alert.alert('Error', `Failed to make prediction. Please try again. ${error}`);\n        }\n    };\n\n    const handleInputChange = (name, value) => {\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    if (!currentUserEmail || !authEmails.includes(currentUserEmail)) {\n        return (\n            <View style={styles.container}>\n                <Text style={styles.title}>Unauthorized Access</Text>\n                <Text>You are not authorized to access this feature.</Text>\n            </View>\n        );\n    }\n\n    return (\n        <ScrollView style={styles.container}>\n            <View style={{ marginBottom: 30 }}>\n                <Text style={styles.title}>Record Food Item</Text>\n                <TextInput label=\"Food Name\" style={styles.input} value={foodName} onChangeText={(text) => setFoodName(text)} />\n                <TextInput label=\"Image Uri\" style={styles.input} value={imageUri} onChangeText={(text) => setImageUri(text)} />\n                <TextInput label=\"Glycemic Index\" keyboardType='numeric' style={styles.input} value={formData.Glycemic_Index} onChangeText={(text) => handleInputChange('Glycemic_Index', text)} />\n                <TextInput label=\"Calories\" style={styles.input} value={formData.Calories} onChangeText={(text) => handleInputChange('Calories', text)} />\n                <TextInput label=\"Carbohydrates\" style={styles.input} value={formData.Carbohydrates} onChangeText={(text) => handleInputChange('Carbohydrates', text)} />\n                <TextInput label=\"Protein\" style={styles.input} value={formData.Protein} onChangeText={(text) => handleInputChange('Protein', text)} />\n                <TextInput label=\"Fat\" style={styles.input} value={formData.Fat} onChangeText={(text) => handleInputChange('Fat', text)} />\n                <TextInput label=\"Sodium Content\" style={styles.input} value={formData.Sodium_Content} onChangeText={(text) => handleInputChange('Sodium_Content', text)} />\n                <TextInput label=\"Potassium Content\" style={styles.input} value={formData.Potassium_Content} onChangeText={(text) => handleInputChange('Potassium_Content', text)} />\n                <TextInput label=\"Magnesium Content\" style={styles.input} value={formData.Magnesium_Content} onChangeText={(text) => handleInputChange('Magnesium_Content', text)} />\n                <TextInput label=\"Calcium Content\" style={styles.input} value={formData.Calcium_Content} onChangeText={(text) => handleInputChange('Calcium_Content', text)} />\n                <TextInput label=\"Fiber Content\" style={styles.input} value={formData.Fiber_Content} onChangeText={(text) => handleInputChange('Fiber_Content', text)} />\n                <Button title=\"Predict\" onPress={handleSubmit} />\n            </View>\n        </ScrollView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: 20,\n    },\n    input: {\n        marginBottom: 10,\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginBottom: 5,\n    },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}