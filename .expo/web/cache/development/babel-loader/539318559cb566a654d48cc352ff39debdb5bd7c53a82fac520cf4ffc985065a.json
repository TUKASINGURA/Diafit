{"ast":null,"code":"var _jsxFileName = \"C:\\\\All Project\\\\Flutter_projects\\\\food Recomendation\\\\DiaFit-master\\\\Screens\\\\RecommendationScreen.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Card, Text, TextInput, Button, ActivityIndicator } from \"react-native-paper\";\nimport customstyles from \"../values/styles\";\nimport { collection, doc, getDocs, setDoc } from \"firebase/firestore\";\nimport { firestoredb } from \"../firebaseConfig\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecommendationScreen() {\n  const [glucose, setGlucose] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [recommendedFoods, setRecommendedFoods] = useState([]);\n  const [data, setData] = useState([]);\n  const [noItem, setNoItem] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [btnLoading, setBtnLoading] = useState(false);\n  console.log(\"Value: \", glucose);\n  const foodchoice = async (foodname, Glycemic_Index, Calcium_Content, Fat, Carbohydrates, Protein) => {\n    console.log(\"Clicked!\");\n    setBtnLoading(true);\n    await setDoc(doc(firestoredb, \"userDiet\", user.uid), {\n      user: user.uid,\n      foodname: foodname,\n      glycemic_Index: Glycemic_Index,\n      calcium: Calcium_Content,\n      fat: Fat,\n      carbohydrates: Carbohydrates,\n      protein: Protein\n    }).then(() => {\n      setBtnLoading(false);\n      console.log(\"Item added!\");\n    }).catch(err => {\n      setBtnLoading(false);\n      console.log(\"Item added!\");\n    });\n  };\n  useEffect(() => {\n    const auth = getAuth();\n    const unsubscribeAuth = onAuthStateChanged(auth, async user => {\n      setUser(user);\n    });\n    try {\n      if (glucose !== \"\") {\n        let recommended = [];\n        const glucoseValue = parseFloat(glucose);\n        if (glucoseValue < 0 || glucoseValue > 16) {\n          setNoItem(true);\n          setLoading(false);\n        } else if (glucoseValue >= 9) {\n          setNoItem(false);\n          recommended = data.filter(item => parseInt(item.Glycemic_Index) <= 55);\n          setLoading(false);\n        } else if (glucoseValue >= 3.9 && glucoseValue < 10) {\n          setNoItem(false);\n          recommended = data.filter(item => parseInt(item.Glycemic_Index) > 55 && parseInt(item.Glycemic_Index) <= 69);\n          setLoading(false);\n        } else if (glucoseValue < 3.9) {\n          setNoItem(false);\n          recommended = data.filter(item => parseInt(item.Glycemic_Index) > 70);\n          setLoading(false);\n        }\n        setRecommendedFoods(recommended);\n      } else {\n        setLoading(true);\n      }\n    } catch (error) {\n      console.log(\"Failed to Recommend: \", error);\n      setLoading(false);\n    }\n    return () => unsubscribeAuth();\n  }, [glucose]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const dbRef = collection(firestoredb, 'recommendedFood');\n      const dataSnapshot = await getDocs(dbRef);\n      const recommendedData = [];\n      dataSnapshot.forEach(doc => {\n        recommendedData.push(doc.data());\n      });\n      setData(recommendedData);\n    };\n    fetchData();\n  }, []);\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(StatusBar, {\n      style: \"dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), _jsxDEV(TextInput, {\n      mode: \"outlined\",\n      placeholder: \"Enter Glucose Level\",\n      label: \"Glucose Level\",\n      onChangeText: text => setGlucose(text),\n      value: glucose,\n      style: styles.textInput,\n      keyboardType: \"numeric\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), loading ? _jsxDEV(ActivityIndicator, {\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this) : _jsxDEV(ScrollView, {\n      contentContainerStyle: styles.scrollView,\n      children: noItem ? _jsxDEV(Text, {\n        children: \"Glocuse out of Range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }, this) : _jsxDEV(View, {\n        style: [customstyles.grid, customstyles.space_between, customstyles.wrap],\n        children: recommendedFoods.map((item, index) => _jsxDEV(Card, {\n          style: styles.card,\n          children: [_jsxDEV(Card.Cover, {\n            source: {\n              uri: item.imageUri\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 37\n          }, this), _jsxDEV(Card.Content, {\n            style: styles.cardContent,\n            children: [_jsxDEV(Text, {\n              style: styles.title,\n              children: item.foodName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 41\n            }, this), _jsxDEV(Text, {\n              style: styles.valueText,\n              children: [item.Glycemic_Index, \" Glycemic Index\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 37\n          }, this), _jsxDEV(Card.Actions, {\n            style: styles.cardContent,\n            children: btnLoading ? _jsxDEV(ActivityIndicator, {\n              color: \"#177AD5\",\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 55\n            }, this) : _jsxDEV(TouchableOpacity, {\n              onPress: () => foodchoice(item.foodName, item.Glycemic_Index, item.Calcium_Content, item.Fat, item.Carbohydrates, item.Protein),\n              children: _jsxDEV(Button, {\n                mode: \"contained\",\n                buttonColor: \"#177AD5\",\n                children: \"SELECT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  scrollView: {\n    flexGrow: 1\n  },\n  textInput: {\n    marginVertical: 10,\n    marginHorizontal: 10\n  },\n  card: {\n    width: \"48%\",\n    marginVertical: 5,\n    marginHorizontal: 3\n  },\n  cardContent: {\n    paddingHorizontal: 5,\n    paddingVertical: 5\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: '500'\n  },\n  valueText: {\n    fontSize: 14,\n    fontWeight: '300',\n    color: 'gray'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StatusBar","View","ScrollView","StyleSheet","FlatList","Card","Text","TextInput","Button","ActivityIndicator","customstyles","collection","doc","getDocs","setDoc","firestoredb","TouchableOpacity","getAuth","onAuthStateChanged","jsxDEV","_jsxDEV","RecommendationScreen","glucose","setGlucose","user","setUser","recommendedFoods","setRecommendedFoods","data","setData","noItem","setNoItem","loading","setLoading","btnLoading","setBtnLoading","console","log","foodchoice","foodname","Glycemic_Index","Calcium_Content","Fat","Carbohydrates","Protein","uid","glycemic_Index","calcium","fat","carbohydrates","protein","then","catch","err","auth","unsubscribeAuth","recommended","glucoseValue","parseFloat","filter","item","parseInt","error","fetchData","dbRef","dataSnapshot","recommendedData","forEach","push","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","mode","placeholder","label","onChangeText","text","value","textInput","keyboardType","size","contentContainerStyle","scrollView","grid","space_between","wrap","map","index","card","Cover","source","uri","imageUri","Content","cardContent","title","foodName","valueText","Actions","color","onPress","buttonColor","create","flex","backgroundColor","flexGrow","marginVertical","marginHorizontal","width","paddingHorizontal","paddingVertical","fontSize","fontWeight"],"sources":["C:/All Project/Flutter_projects/food Recomendation/DiaFit-master/Screens/RecommendationScreen.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { View, ScrollView, StyleSheet, FlatList } from \"react-native\";\nimport { Card, Text, TextInput, Button, ActivityIndicator } from \"react-native-paper\";\nimport customstyles from \"../values/styles\";\nimport { collection, doc, getDocs, setDoc } from \"firebase/firestore\";\nimport { firestoredb } from \"../firebaseConfig\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\nexport default function RecommendationScreen() {\n    const [glucose, setGlucose] = useState(\"\");\n    const [user, setUser] = useState(null);\n    const [recommendedFoods, setRecommendedFoods] = useState([]);\n    const [data, setData] = useState([]);\n    const [noItem, setNoItem] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const [btnLoading, setBtnLoading] = useState(false);\n\n    console.log(\"Value: \", glucose);\n    // console.log(\"Data: \", data);\n    // console.log(\"recommended Foods: \", recommendedFoods);\n\n\n    const foodchoice = async (foodname, Glycemic_Index, Calcium_Content, Fat, Carbohydrates, Protein) => {\n        console.log(\"Clicked!\");\n        setBtnLoading(true)\n        await setDoc(doc(firestoredb, \"userDiet\", user.uid), {\n            user: user.uid,\n            foodname: foodname,\n            glycemic_Index: Glycemic_Index,\n            calcium: Calcium_Content,\n            fat: Fat,\n            carbohydrates: Carbohydrates,\n            protein: Protein\n        }).then(() => {\n            setBtnLoading(false)\n            console.log(\"Item added!\")\n        }).catch((err) => {\n            setBtnLoading(false)\n            console.log(\"Item added!\")\n        })\n    }\n    useEffect(() => {\n        const auth = getAuth();\n        const unsubscribeAuth = onAuthStateChanged(auth, async (user) => {\n            setUser(user);\n        });\n\n        try {\n            if (glucose !== \"\") {\n                let recommended = [];\n                const glucoseValue = parseFloat(glucose);\n\n                if (glucoseValue < 0 || glucoseValue > 16) {\n                    setNoItem(true);\n                    setLoading(false)\n\n                } else if (glucoseValue >= 9) {\n                    // Recommend foods with glycemic index of 0-55\n                    setNoItem(false);\n                    recommended = data.filter(item => parseInt(item.Glycemic_Index) <= 55);\n                    setLoading(false)\n\n                } else if (glucoseValue >= 3.9 && glucoseValue < 10) {\n                    // Recommend foods with glycemic index of 55-69\n                    setNoItem(false);\n                    recommended = data.filter(item => parseInt(item.Glycemic_Index) > 55 && parseInt(item.Glycemic_Index) <= 69);\n                    setLoading(false)\n\n                } else if (glucoseValue < 3.9) {\n                    // Recommend foods with glycemic index above 70\n                    setNoItem(false);\n                    recommended = data.filter(item => parseInt(item.Glycemic_Index) > 70);\n                    setLoading(false)\n\n                }\n\n                setRecommendedFoods(recommended);\n            } else {\n                setLoading(true)\n            }\n        } catch (error) {\n            console.log(\"Failed to Recommend: \", error);\n            setLoading(false)\n        }\n        return () => unsubscribeAuth();\n    }, [glucose]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const dbRef = collection(firestoredb, 'recommendedFood');\n            const dataSnapshot = await getDocs(dbRef);\n            const recommendedData = [];\n            dataSnapshot.forEach((doc) => {\n                recommendedData.push(doc.data());\n            });\n            setData(recommendedData);\n        };\n        fetchData();\n    }, []);\n\n    return (\n        <View style={styles.container}>\n            <StatusBar style=\"dark\" />\n            <TextInput\n                mode=\"outlined\"\n                placeholder=\"Enter Glucose Level\"\n                label=\"Glucose Level\"\n                onChangeText={text => setGlucose(text)}\n                value={glucose}\n                style={styles.textInput}\n                keyboardType=\"numeric\"\n            />\n            {loading ?\n                <ActivityIndicator size=\"small\" /> :\n                <ScrollView contentContainerStyle={styles.scrollView}>\n                    {noItem ?\n                        <Text>Glocuse out of Range</Text>\n                        :\n                        <View style={[customstyles.grid, customstyles.space_between, customstyles.wrap]}>\n                            {recommendedFoods.map((item, index) => (\n                                <Card key={index} style={styles.card}>\n                                    <Card.Cover source={{ uri: item.imageUri }} />\n                                    <Card.Content style={styles.cardContent}>\n                                        <Text style={styles.title}>{item.foodName}</Text>\n                                        <Text style={styles.valueText}>{item.Glycemic_Index} Glycemic Index</Text>\n                                    </Card.Content>\n                                    <Card.Actions style={styles.cardContent}>\n                                        {btnLoading ? <ActivityIndicator color='#177AD5' size=\"small\" /> :\n                                            <TouchableOpacity onPress={() => foodchoice(item.foodName, item.Glycemic_Index, item.Calcium_Content, item.Fat, item.Carbohydrates, item.Protein)}>\n                                                <Button mode=\"contained\" buttonColor='#177AD5'>SELECT</Button>\n                                            </TouchableOpacity>\n                                        }\n                                    </Card.Actions>\n                                </Card>\n                            ))}\n                        </View>\n                    }\n                </ScrollView>\n            }\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    scrollView: {\n        flexGrow: 1,\n    },\n    textInput: {\n        marginVertical: 10,\n        marginHorizontal: 10,\n    },\n    card: {\n        width: \"48%\",\n        marginVertical: 5,\n        marginHorizontal: 3,\n    },\n    cardContent: {\n        paddingHorizontal: 5,\n        paddingVertical: 5,\n    },\n    title: {\n        fontSize: 16,\n        fontWeight: '500',\n    },\n    valueText: {\n        fontSize: 14,\n        fontWeight: '300',\n        color: 'gray',\n    },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}